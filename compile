#! /usr/bin/env python
# -*- coding: utf-8 -*-

from __future__ import with_statement
from parser import parse, ParseError
from machine_translator import Translate

def main(args):
    if len(args) != 2:
        return "Usage: %s <file>" % args[0]
    
    file = args[1]

    try:
        translator = Translate()
        with open(file, 'r') as f:
            code_lines = [line.rstrip('\n') for line in f.xreadlines()]
            tree = parse(code_lines)
            translator.traverse(tree)

        dotpos = file.rfind('.dmx')
        if dotpos == -1:
            out_file = file + '.m'
        else:
            out_file = file[:dotpos] + '.m'

        with open(out_file, 'w') as f:
            f.write("%s" % translator)

    except IOError, e:
        return "Could not open %r for reading." % file
    except ParseError, e:
        return str(e).capitalize()
    else:
        return 0

if __name__ == '__main__':
    import sys
    sys.exit(main(sys.argv))
